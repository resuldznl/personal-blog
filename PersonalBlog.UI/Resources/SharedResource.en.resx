<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutme" xml:space="preserve">
    <value>About Me</value>
  </data>
  <data name="active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="addnewSkill" xml:space="preserve">
    <value>Add New Skill</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="areusure" xml:space="preserve">
    <value>Are You Sure?</value>
  </data>
  <data name="available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="birthday" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="blogs" xml:space="preserve">
    <value>My Blogs</value>
  </data>
  <data name="changeButton" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="changeStatusError" xml:space="preserve">
    <value>Status Change Failed</value>
  </data>
  <data name="changeStatusSuccess" xml:space="preserve">
    <value>Status Change Successful</value>
  </data>
  <data name="company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="contactMe" xml:space="preserve">
    <value>Contact Me</value>
  </data>
  <data name="contacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="createBlog" xml:space="preserve">
    <value>Create Blog</value>
  </data>
  <data name="createBlogFailed" xml:space="preserve">
    <value>Blogging Failed</value>
  </data>
  <data name="createBlogSuccess" xml:space="preserve">
    <value>Blogging Successful</value>
  </data>
  <data name="createContactFail" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="createContactSuccess" xml:space="preserve">
    <value>Mail Send Successful!</value>
  </data>
  <data name="createExperience" xml:space="preserve">
    <value>Create Experience</value>
  </data>
  <data name="createExperienceFail" xml:space="preserve">
    <value>Experience Creation Failed</value>
  </data>
  <data name="createExperienceSuccess" xml:space="preserve">
    <value>Experience Creation Successful</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="degree" xml:space="preserve">
    <value>Degree</value>
  </data>
  <data name="DegreeRequired" xml:space="preserve">
    <value>Degree is Required!</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="downcv" xml:space="preserve">
    <value>Download CV</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailMaxLength" xml:space="preserve">
    <value>Email cannot exceed 50 characters</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is Required!</value>
  </data>
  <data name="email_EmailAddress" xml:space="preserve">
    <value>Please enter in Email format</value>
  </data>
  <data name="endDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="experience" xml:space="preserve">
    <value>Experiences</value>
  </data>
  <data name="experienceyears" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="freelance" xml:space="preserve">
    <value>Freelance</value>
  </data>
  <data name="jobtitle" xml:space="preserve">
    <value>Job Title</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="loginError" xml:space="preserve">
    <value>Your Username and/or Password is Incorrect</value>
  </data>
  <data name="logout" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageRequired" xml:space="preserve">
    <value>Message is Required!</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="namesurname" xml:space="preserve">
    <value>Name Surname</value>
  </data>
  <data name="NameSurnameMaxLength" xml:space="preserve">
    <value>Name cannot exceed 100 characters</value>
  </data>
  <data name="NameSurnameRequired" xml:space="preserve">
    <value>Name is Required!</value>
  </data>
  <data name="notavailable" xml:space="preserve">
    <value>Not Available</value>
  </data>
  <data name="passive" xml:space="preserve">
    <value>Passive</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordMaxLength" xml:space="preserve">
    <value>Password cannot exceed 15 characters</value>
  </data>
  <data name="PasswordMinLength" xml:space="preserve">
    <value>Password Cannot Be Less Than 8 Characters</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is Required</value>
  </data>
  <data name="personalinfo" xml:space="preserve">
    <value>Personal Information</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SkillCreateFailed" xml:space="preserve">
    <value>Skill Create Failed</value>
  </data>
  <data name="SkillCreateSuccessful" xml:space="preserve">
    <value>Skill Create Successful</value>
  </data>
  <data name="skillName" xml:space="preserve">
    <value>Skill Name</value>
  </data>
  <data name="SkillNameRequired" xml:space="preserve">
    <value>Skill Name is Required!</value>
  </data>
  <data name="skills" xml:space="preserve">
    <value>My Skills</value>
  </data>
  <data name="SkillUpdateFailed" xml:space="preserve">
    <value>Skill Update Failed</value>
  </data>
  <data name="SkillUpdateSuccessful" xml:space="preserve">
    <value>Skill Update Successful</value>
  </data>
  <data name="startDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="SubjectMaxLength" xml:space="preserve">
    <value>Subject cannot exceed 200 characters</value>
  </data>
  <data name="SubjectRequired" xml:space="preserve">
    <value>Subject is Required!</value>
  </data>
  <data name="surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="swalCANCELbutton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="swalOKbutton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="transactionCancel" xml:space="preserve">
    <value>Transaction Canceled</value>
  </data>
  <data name="UpateadminInfoFailed" xml:space="preserve">
    <value>Admin Information Update Failed</value>
  </data>
  <data name="UpateadminInfoSuccess" xml:space="preserve">
    <value>Admin Information Update Successful</value>
  </data>
  <data name="updateBlog" xml:space="preserve">
    <value>Update Blog</value>
  </data>
  <data name="updateBlogFailed" xml:space="preserve">
    <value>Blog Update Failed</value>
  </data>
  <data name="updateBlogSuccess" xml:space="preserve">
    <value>Blog Update Successful</value>
  </data>
  <data name="updateExperience" xml:space="preserve">
    <value>Update Experience</value>
  </data>
  <data name="updateExperienceFail" xml:space="preserve">
    <value>Experience Update Failed</value>
  </data>
  <data name="updateExperienceSuccess" xml:space="preserve">
    <value>Experience Update Successful</value>
  </data>
  <data name="updatepersonalinfofail" xml:space="preserve">
    <value>Personnel Information Update Failed</value>
  </data>
  <data name="updatepersonalinfosuccess" xml:space="preserve">
    <value>Personnel Information Update Successful</value>
  </data>
  <data name="upload" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UserNameMaxLength" xml:space="preserve">
    <value>Username cannot exceed 15 characters</value>
  </data>
  <data name="UserNameMinLength" xml:space="preserve">
    <value>Username Cannot Be Less Than 8 Characters</value>
  </data>
  <data name="UserNameRequired" xml:space="preserve">
    <value>Username is Required</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="willbechange" xml:space="preserve">
    <value>Status Will Be Changed!</value>
  </data>
  <data name="years" xml:space="preserve">
    <value>Years</value>
  </data>
</root>